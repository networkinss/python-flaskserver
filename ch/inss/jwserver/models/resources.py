# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ch.inss.jwserver.models.base_model_ import Model
from ch.inss.jwserver import util


class Resources(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filename=None):  # noqa: E501
        """Resources - a model defined in OpenAPI

        :param filename: The filename of this Resources.  # noqa: E501
        :type filename: str
        """
        self.openapi_types = {
            'filename': str
        }

        self.attribute_map = {
            'filename': 'filename'
        }

        self._filename = filename

    @classmethod
    def from_dict(cls, dikt) -> 'Resources':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Resources of this Resources.  # noqa: E501
        :rtype: Resources
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filename(self):
        """Gets the filename of this Resources.


        :return: The filename of this Resources.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this Resources.


        :param filename: The filename of this Resources.
        :type filename: str
        """
        if filename is None:
            raise ValueError("Invalid value for `filename`, must not be `None`")  # noqa: E501
        if filename is not None and len(filename) < 16:
            raise ValueError("Invalid value for `filename`, length must be greater than or equal to `16`")  # noqa: E501

        self._filename = filename
